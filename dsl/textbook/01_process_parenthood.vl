import lib.containers

define TaskForParenthood as Box<task_struct> {
    :default [
        Text pid, comm
        Text<string> state: ${get_task_state(@this)}
        Text ppid: parent.pid
    ]
    :default => :show_children [
        Link children -> @children
    ]
    // :default => :show_threads [
    //     Text tgid
    //     Link thread_group -> @thread_group
    // ]
} where {
    children = List<task_struct.children>(@this.children).forEach |node| {
        yield TaskForParenthood<task_struct.sibling>("task #{pid}": @node)
    }
    // thread_group = List<task_struct.thread_group>(@this.thread_group).forEach |node| {
    //     yield TaskForParenthood<task_struct.thread_group>("task #{pid}": @node)
    // }
    parent = TaskForParenthood(@this.parent)
}

view process_tree {
    plot TaskForParenthood(${&init_task})
    // plot TaskForParenthood("task_current": ${per_cpu_current_task(current_cpu())})
}
